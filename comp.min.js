/* ____ ____ _  _ ___   
*  |___ [__] |\/| |--' . v1.4.0
* 
* A design pattern and micro-framework for creating UI components
*
* Copyright Brendan Jefferis and other contributors
* Released under the MIT license
* 
* Issues? Please visit https://github.com/brendan-jefferis/comp/issues
*
* Date: 2017-01-18T03:47:21.382Z 
*/
(function(e,n){typeof exports==="object"&&typeof module!=="undefined"?module.exports=n():typeof define==="function"&&define.amd?define(n):e.comp=n()})(this,function(){"use strict";function e(e){try{new Function(e)}catch(e){if(e instanceof SyntaxError){throw new SyntaxError(e)}}}function n(e){e=e||window.event;return e.target||e.srcElement}/* eslint-disable no-nested-ternary */
var t=[];var r=[];var o=function(e,n){if(e===n){return 0}var o=e.length;var a=n.length;if(o===0){return a}if(a===0){return o}var i;var u;var c;var f;var l=0;var d=0;while(l<o){r[l]=e.charCodeAt(l);t[l]=++l}while(d<a){i=n.charCodeAt(d);c=d++;u=d;for(l=0;l<o;l++){f=i===r[l]?c:c+1;c=t[l];u=t[l]=c>u?f>u?u+1:f:f>c?c+1:f}}return u};var a=3;function i(e,n){if(e==null){throw new Error("suggestActions requires a string argument to use as a query")}if(n==null){throw new Error("suggestActions requires a component to search for actions")}var t=[];Object.keys(n).map(function(n){var r=o(e,n);if(r>a){return}t.push({term:n,distance:r})});return t.sort(function(e,n){return e.distance>n.distance})}function u(e){Object.keys(Event.prototype).map(function(n,t){if(t>=10&&t<=19){document.body.addEventListener(n.toLowerCase(),function(n){c(n,e)})}},this)}function c(e,t){e.stopPropagation();var r=n(e);if(r.nodeName==="BODY"){return}var o=l(r);var a=t[o.getAttribute("data-component")];var u=d(e,r,o);if(u.name===""){return}if(a[u.name]==null){var c=i(u.name,a);var f=c.length?"\r\n\r\nDid you mean\r\n\r\n"+c.map(function(e){return a.name+"."+e.term+"\n"}).join("")+"\r":"";throw new Error("Could not find action "+u.name+" in component "+a.name+f)}if(u.args===""){a[u.name]()}else{a[u.name].apply(u,u.args)}}function f(n,t,r){var o=t.getAttribute("data-"+[n.type])||"";if(o!==""||t===r){try{e(o,t)}catch(e){var a=document.createElement("div");a.appendChild(t.cloneNode(false));throw new SyntaxError("\r\n\r\nElement: "+a.innerHTML+"\r\nEvent: data-"+[n.type]+"\r\nAction: "+o+"\r\n\r\n"+e)}return{name:o,element:t}}return f(n,t.parentNode,r)}function l(e){return e.closest("[data-component]")}function d(e,n,t){var r=f(e,n,t);return{name:m(r.name),args:s(r.name,r.element)}}function m(e){var n=e.match(/[^(]*/);return n?n[0]:""}function s(e,n){var t=/\(\s*([^)]+?)\s*\)/.exec(e);if(!t||t[1]==null){return""}t=t[1].split(/\s*,\s*/).map(function(e){var t=e.split(".");if(t.length===1&&t.indexOf("this")===-1){return e}var r=t.indexOf("dataset")===1?Object.assign({},n.dataset):null;return r?r[t[2]]:n[t[1]]},n);return t}var v=Object.freeze({registerEventDelegator:u,delegateEvent:c,bubbleUntilActionFound:f,getComponentHtmlTarget:l,getEventActionFromElement:d,extractActionName:m,extractArguments:s});var p=new window.DOMParser;var h="text/html";var y="application/xhtml+xml";var g="<i></i>";var E="HTML";var b=false;var w=false;
// Check if browser supports text/html DOMParser
try{/* istanbul ignore next: Fails in older browsers */
if(p.parseFromString(g,h))b=true}catch(e){}try{/* istanbul ignore next: Only used in ie9 */
if(!b&&p.parseFromString(g,y))w=true}catch(e){}/**
 * Returns the results of a DOMParser as an HTMLElement.
 * (Shims for older browser and IE9).
 */
var N=b?function e(n,t){var r=p.parseFromString(n,h);return t===E?r.documentElement:r.body.firstChild}:function e(n,t){var r=t===E;
// Special case for ie9 (documentElement.innerHTML not supported).
if(w&&r){return p.parseFromString(n,y).documentElement}
// Fallback to innerHTML for other older browsers.
var o=document.implementation.createHTMLDocument("");if(r){o.documentElement.innerHTML=n;return o.documentElement}else{o.body.innerHTML=n;return o.body.firstChild}};var A=N;var S="_set-dom-";var x=S+"index";var C=S+"mounted";var O=window.Node.ELEMENT_NODE;var T=window.Node.DOCUMENT_NODE;M.KEY="data-key";M.IGNORE="data-ignore";M.CHECKSUM="data-checksum";var j=M;/**
 * @description
 * Updates existing dom to match a new dom.
 *
 * @param {Node} prev - The html entity to update.
 * @param {String|Node} next - The updated html(entity).
 */
function M(e,n){
// Ensure a realish dom node is provided.
P(e&&e.nodeType,"You must provide a valid node to update.");
// Alias document element with document.
if(e.nodeType===T)e=e.documentElement;
// If a string was provided we will parse it as dom.
if(typeof n==="string")n=A(n,e.nodeName);
// Update the node.
H(e,n);
// Trigger mount events on initial set.
if(!e[C]){e[C]=true;q(e)}}/**
 * @private
 * @description
 * Updates a specific htmlNode and does whatever it takes to convert it to another one.
 *
 * @param {Node} prev - The previous HTMLNode.
 * @param {Node} next - The updated HTMLNode.
 */
function H(e,n){if(e.nodeType===n.nodeType){
// Handle regular element node updates.
if(e.nodeType===O){
// Ignore elements if their checksum matches.
if(F(e)===F(n))return;
// Ignore elements that explicity choose not to be diffed.
if(_(e)&&_(n))return;
// Update all children (and subchildren).
L(e,e.childNodes,n.childNodes);
// Update the elements attributes / tagName.
if(e.nodeName===n.nodeName){
// If we have the same nodename then we can directly update the attributes.
I(e,e.attributes,n.attributes)}else{
// Otherwise clone the new node to use as the existing node.
var t=n.cloneNode();
// Copy over all existing children from the original node.
while(e.firstChild)t.appendChild(e.firstChild);
// Replace the original node with the new one with the right tag.
e.parentNode.replaceChild(t,e)}}else{
// Handle other types of node updates (text/comments/etc).
// If both are the same type of node we can update directly.
if(e.nodeValue!==n.nodeValue){e.nodeValue=n.nodeValue}}}else{
// we have to replace the node.
U(e);e.parentNode.replaceChild(n,e);q(n)}}/**
 * @private
 * @description
 * Utility that will update one list of attributes to match another.
 *
 * @param {Node} parent - The current parentNode being updated.
 * @param {NamedNodeMap} prev - The previous attributes.
 * @param {NamedNodeMap} next - The updated attributes.
 */
function I(e,n,t){var r,o,a,i,u;
// Remove old attributes.
for(r=n.length;r--;){o=n[r];i=o.namespaceURI;u=o.localName;a=t.getNamedItemNS(i,u);if(!a)n.removeNamedItemNS(i,u)}
// Set new attributes.
for(r=t.length;r--;){o=t[r];i=o.namespaceURI;u=o.localName;a=n.getNamedItemNS(i,u);if(!a){
// Add a new attribute.
t.removeNamedItemNS(i,u);n.setNamedItemNS(o)}else if(a.value!==o.value){
// Update existing attribute.
a.value=o.value}}}/**
 * @private
 * @description
 * Utility that will update one list of childNodes to match another.
 *
 * @param {Node} parent - The current parentNode being updated.
 * @param {NodeList} prevChildNodes - The previous children.
 * @param {NodeList} nextChildNodes - The updated children.
 */
function L(e,n,t){var r,o,a,i,u;
// Convert nodelists into a usuable map.
var c=D(n);var f=D(t);
// Remove old nodes.
for(r in c){if(f[r])continue;
// Trigger custom dismount event.
U(c[r]);
// Remove child from dom.
e.removeChild(c[r])}
// Set new nodes.
for(r in f){o=c[r];a=f[r];
// Extract the position of the new node.
i=a[x];if(o){
// Update an existing node.
H(o,a);
// Check if the node has moved in the tree.
if(o[x]===i)continue;
// Get the current element at the new position.
/* istanbul ignore next */
u=n[i]||null;// TODO: figure out if || null is needed.
// Check if the node has already been properly positioned.
if(u===o)continue;
// Reposition node.
e.insertBefore(o,u)}else{
// Get the current element at the new position.
u=n[i]||null;
// Append the new node at the correct position.
e.insertBefore(a,u);
// Trigger custom mounted event.
q(a)}}}/**
 * @private
 * @description
 * Converts a nodelist into a keyed map.
 * This is used for diffing while keeping elements with 'data-key' or 'id' if possible.
 *
 * @param {NodeList} childNodes - The childNodes to convert.
 * @return {Object}
 */
function D(e){var n={};var t=e.length;var r;for(var o=0;o<t;o++){r=e[o];r[x]=o;n[k(r)||o]=r}return n}/**
 * @private
 * @description
 * Utility to try to pull a key out of an element.
 * Uses 'data-key' if possible and falls back to 'id'.
 *
 * @param {Node} node - The node to get the key for.
 * @return {String}
 */
function k(e){if(e.nodeType!==O)return;var n=e.getAttribute(M.KEY)||e.id;if(n)n=S+n;return n&&S+n}/**
 * @private
 * @description
 * Utility to try to pull a checksum attribute from an element.
 * Uses 'data-checksum' or user specified checksum property.
 *
 * @param {Node} node - The node to get the checksum for.
 * @return {String|NaN}
 */
function F(e){return e.getAttribute(M.CHECKSUM)||NaN}/**
 * @private
 * @description
 * Utility to try to check if an element should be ignored by the algorithm.
 * Uses 'data-ignore' or user specified ignore property.
 *
 * @param {Node} node - The node to check if it should be ignored.
 * @return {Boolean}
 */
function _(e){return e.getAttribute(M.IGNORE)!=null}/**
 * Recursively trigger a mount event for a node and it's children.
 *
 * @param {Node} node - the initial node to be mounted.
 */
function q(e){
// Trigger mount event for this element if it has a key.
if(k(e))Y(e,"mount");
// Mount all children.
var n=e.firstChild;while(n){q(n);n=n.nextSibling}}/**
 * Recursively trigger a dismount event for a node and it's children.
 *
 * @param {Node} node - the initial node to be dismounted.
 */
function U(e){
// Dismount all children.
var n=e.firstChild;while(n){U(n);n=n.nextSibling}
// Trigger dismount event for this element if it has a key.
if(k(e))Y(e,"dismount")}/**
 * @private
 * @description
 * Create and dispatch a custom event.
 *
 * @param {Node} el - the node to dispatch the event for.
 * @param {String} type - the name of the event.
 */
function Y(e,n){var t=document.createEvent("Event");var r={value:e};t.initEvent(n,false,false);Object.defineProperty(t,"target",r);Object.defineProperty(t,"srcElement",r);e.dispatchEvent(t)}/**
 * @private
 * @description
 * Confirm that a value is truthy, throws an error message otherwise.
 *
 * @param {*} val - the val to test.
 * @param {String} msg - the error message on failure.
 * @throws Error
 */
function P(e,n){if(!e)throw new Error("set-dom: "+n)}function R(e){return e&&e.__esModule?e["default"]:e}function K(e,n){return n={exports:{}},e(n,n.exports),n.exports}var V=K(function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:true});var t={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#39;","`":"&#96;"};var r=new RegExp(Object.keys(t).join("|"),"g");n["default"]=function(){var e=arguments.length<=0||arguments[0]===undefined?"":arguments[0];return String(e).replace(r,function(e){return t[e]})};e.exports=n["default"]});var B=R(V);
// Source: http://www.2ality.com/2015/01/template-strings-html.html#comment-2078932192
var G=function(e){for(var n=arguments.length,t=Array(n>1?n-1:0),r=1;r<n;r++){t[r-1]=arguments[r]}return e.raw.reduce(function(e,n,r){var o=t[r-1];if(Array.isArray(o)){o=o.join("")}if(e.endsWith("@")){o=B(o);e=e.slice(0,-1)}return e+o+n})};var z=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol==="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function W(e,n){return e.then(function(e){if(e==null){throw new Error("No model received - aborting render")}n(e)}).catch(function(e){e=(typeof e==="undefined"?"undefined":z(e))==="object"?e:e+"\r\nError unhandled by component. Add a catch handler in your action.";console.error(e);return e})}function J(e){if(e==null){throw new Error("InvalidArgument: DOM element expected")}return Array.prototype.map.call(e.querySelectorAll("[data-component]"),function(e){return e.getAttribute("data-component")})}var Q={};function X(e,n,t,r){t(r);var o={};Object.keys(n).map(function(e){o[e]=function(){for(var o=arguments.length,a=Array(o),i=0;i<o;i++){a[i]=arguments[i]}var u=n[e].apply(n,a);if(u&&u.then){W(u,t)}t(r)}},this);o.name=e;o.get=function(e){return r[e]};o.render=function(){return t(r)};return o}function Z(e,n,t,r){if(e==null||e===""){throw new Error("Your component needs a name")}if(n==null){var o="// It must be a function that takes a model and returns an object of functions, e.g.\r\n\r\nYourComponent.Actions = function (model) {\r\n    return {\r\n        sayHello: function () { console.log('Hi.'); },\r\n        greet: function (name) { console.log('Hello, ' + name); }\r\n    }\r\n}";throw new Error(e+" needs some actions! Here's an example of an Actions function:\r\n\r\n"+o+"\r\n\r\n")}var a=t&&t();var i=a&&a.init?a.init:function(){};var u=a&&a.render?function(n){var t=a.render(n,G);if(typeof document!=="undefined"&&t){var r=document.querySelector("[data-component="+e+"]");if(r){if(r.innerHTML===""){r.innerHTML=t}else{j(r.firstElementChild,t)}var o=J(r);if(o.length){o.map(function(e){return Q[e]&&Q[e].render()})}}}}:function(){};var c=X(e,n(r),u,r);Q[e]=c;i(c,r);return c}if(typeof document!=="undefined"&&typeof v!=="undefined"){u(Q)}var $={components:Q,create:Z};return $});
//# sourceMappingURL=comp.min.js.map